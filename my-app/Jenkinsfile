pipeline {
    agent any

    environment {
        NODEJS_HOME = tool 'NodeJS-18'
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm cache clean --force'
                    sh 'rm -rf node_modules package-lock.json'
                    sh 'npm install --verbose || cat npm-install.log'
                }
            }
        }

        stage('Code Quality Check') {
            steps {
                script {
                    echo "Running ESLint..."
                    sh 'npx eslint src tests || exit 1'

                    echo "Running Jest tests with coverage..."
                    sh 'npm test -- --coverage || exit 1'

                    echo "Running TypeScript type checks..."
                    sh 'npx tsc --noEmit || exit 1'

                    echo "Checking code formatting with Prettier..."
                    sh 'npm run format:check || exit 1'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    echo "Running SonarQube scan..."
                    sh 'sonar-scanner'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'npm run build || echo "Build failed"'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Starting application on port 3000...'
                    sh '''
                    nohup npm run start > app.log 2>&1 &
                    sleep 5
                    curl -Is http://localhost:3000 || echo "App is not responding"
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for errors.'
        }
    }
}
